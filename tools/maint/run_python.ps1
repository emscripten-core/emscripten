# Copyright 2023 The Emscripten Authors.  All rights reserved.
# Emscripten is available under two separate licenses, the MIT license and the
# University of Illinois/NCSA Open Source License.  Both these licenses can be
# found in the LICENSE file.
#
# Entry point for running python scripts on Windows systems via PowerShell.
#
# Automatically generated by `create_entry_points.py`; DO NOT EDIT.
#
# To make modifications to this file, edit `tools/run_python.ps1` and then run
# `tools/maint/create_entry_points.py`

$ErrorActionPreference = 'Stop'

$launcher = $env:EMSDK_PYTHON
$launcherArgs = @()
if (!$launcher) {
  try {
    $launcher = Get-Command py.exe -ErrorAction Stop
    $launcherArgs += '-3'
  } catch {
    try {
      $launcher = Get-Command python -ErrorAction Stop
    } catch {
      $launcher = 'python'
    }
  }
}

# Ignore PYTHON* environment variables.
$launcherArgs += '-E'
# -E will not ignore _PYTHON_SYSCONFIGDATA_NAME an internal
# of cpython used in cross compilation via setup.py, so remove it explicitly.
Remove-Item -ErrorAction Ignore Env:\_PYTHON_SYSCONFIGDATA_NAME

$pythonScript = $MyInvocation.MyCommand.Path -replace '\.ps1$', '.py'

# Use $args which is more reliable for argument passing
$allArgs = @()
if ($args) {
    $allArgs += $args
} elseif ($MyInvocation.UnboundArguments) {
    $allArgs += $MyInvocation.UnboundArguments
}
$processInfo = New-Object System.Diagnostics.ProcessStartInfo
$processInfo.FileName = $launcher
$processInfo.Arguments = ($launcherArgs + $pythonScript + $allArgs) -join ' '
$processInfo.RedirectStandardOutput = $true
$processInfo.RedirectStandardError = $true
$processInfo.UseShellExecute = $false
$processInfo.CreateNoWindow = $true
$process = New-Object System.Diagnostics.Process
$process.StartInfo = $processInfo
$process.Start() | Out-Null
$stdout = $process.StandardOutput.ReadToEnd()
$stderr = $process.StandardError.ReadToEnd()
$process.WaitForExit()
if ($stdout) { Write-Output $stdout }
if ($stderr) { Write-Output $stderr }

# Exit with the same code as the underlying command
exit $process.ExitCode